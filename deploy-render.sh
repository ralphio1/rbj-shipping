#!/bin/bash

# Render deployment checker for Karrio
# Based on Karrio self-hosting documentation
# https://www.karrio.io/docs/self-hosting

set -e

echo "üöÄ Karrio Render Deployment Checker"
echo "======================================"

# Colors for output
RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
BLUE='\033[0;34m'
NC='\033[0m' # No Color

print_status() {
    echo -e "${BLUE}[INFO]${NC} $1"
}

print_success() {
    echo -e "${GREEN}[SUCCESS]${NC} $1"
}

print_warning() {
    echo -e "${YELLOW}[WARNING]${NC} $1"
}

print_error() {
    echo -e "${RED}[ERROR]${NC} $1"
}

# Test API health endpoint
test_api_health() {
    print_status "Testing API health..."
    
    if curl -f -s https://karrio-api.onrender.com/ > /dev/null; then
        print_success "API service is responding"
        return 0
    else
        print_error "API service is not responding"
        print_warning "Check API service logs in Render dashboard"
        return 1
    fi
}

# Test API token endpoint
test_api_auth() {
    print_status "Testing API authentication endpoint..."
    
    response=$(curl -s -w "%{http_code}" \
        -X POST https://karrio-api.onrender.com/api/token \
        -H "Content-Type: application/json" \
        -d '{"email":"contact@reboundjerseys.com","password":"ReboundJerseys2025"}' \
        -o /dev/null)
    
    if [ "$response" = "200" ]; then
        print_success "API authentication successful (HTTP $response)"
        return 0
    elif [ "$response" = "401" ]; then
        print_error "API authentication failed (HTTP 401 - Invalid credentials)"
        print_warning "Check that user exists in database and credentials are correct"
        return 1
    elif [ "$response" = "400" ] || [ "$response" = "422" ]; then
        print_warning "API auth endpoint accessible but request format issue (HTTP $response)"
        return 0
    else
        print_error "API auth endpoint returned HTTP $response"
        return 1
    fi
}

# Test dashboard accessibility
test_dashboard() {
    print_status "Testing dashboard accessibility..."
    
    if curl -f -s https://karrio-dashboard.onrender.com/ > /dev/null; then
        print_success "Dashboard is accessible"
        return 0
    else
        print_error "Dashboard is not accessible"
        return 1
    fi
}

# Check environment variables guidance
show_env_vars() {
    print_status "Required Environment Variables (set these in Render dashboard):"
    echo ""
    echo "For karrio-api service:"
    echo "  DATABASE_HOST=your-project.supabase.co"
    echo "  DATABASE_USERNAME=postgres"
    echo "  DATABASE_PASSWORD=your-supabase-password"
    echo "  DATABASE_NAME=postgres"
    echo ""
    echo "Auto-configured by render.yaml:"
    echo "  KARRIO_PUBLIC_URL=https://karrio-api.onrender.com"
    echo "  DOMAIN=karrio-api.onrender.com"
    echo "  SECRET_KEY=<auto-generated>"
    echo ""
    echo "For karrio-dashboard service (auto-configured):"
    echo "  NEXT_PUBLIC_KARRIO_API_URL=https://karrio-api.onrender.com"
    echo "  KARRIO_API_URL=https://karrio-api.onrender.com"
    echo "  DASHBOARD_URL=https://karrio-dashboard.onrender.com"
    echo ""
}

# Show admin credentials info
show_admin_info() {
    print_status "Admin User Information:"
    echo ""
    echo "Your database user credentials:"
    echo "  Email: contact@reboundjerseys.com"
    echo "  Password: ReboundJerseys2025"
    echo ""
    echo "render.yaml configured admin (auto-generated):"
    echo "  Email: admin@reboundjerseys.com"
    echo "  Password: <check Render dashboard for generated value>"
    echo ""
    echo "Default Karrio credentials (from docs):"
    echo "  Email: admin@example.com"
    echo "  Password: demo"
    echo ""
    print_warning "Using existing database user for login testing"
}

# Main deployment check
check_deployment() {
    print_status "Checking Karrio deployment on Render..."
    echo ""
    
    # Test services
    api_healthy=false
    dashboard_accessible=false
    
    if test_api_health; then
        api_healthy=true
        test_api_auth
    fi
    
    if test_dashboard; then
        dashboard_accessible=true
    fi
    
    echo ""
    print_status "Deployment Summary:"
    if $api_healthy; then
        print_success "‚úÖ API service is running"
    else
        print_error "‚ùå API service has issues"
    fi
    
    if $dashboard_accessible; then
        print_success "‚úÖ Dashboard service is running"  
    else
        print_error "‚ùå Dashboard service has issues"
    fi
    
    echo ""
    
    if $api_healthy && $dashboard_accessible; then
        print_success "üéâ Both services are running!"
        print_status "Try logging in at: https://karrio-dashboard.onrender.com"
        show_admin_info
    else
        print_error "‚ö†Ô∏è  Some services have issues"
        print_status "Troubleshooting steps:"
        echo "1. Check service logs in Render dashboard"
        echo "2. Verify environment variables are set"
        echo "3. Ensure database connection is working"
        echo "4. Redeploy services if needed"
        echo ""
        show_env_vars
    fi
}

# Show help
show_help() {
    echo "Usage: $0 [COMMAND]"
    echo ""
    echo "Commands:"
    echo "  check       Check deployment status (default)"
    echo "  api         Test API service only"
    echo "  dashboard   Test dashboard service only"
    echo "  env         Show required environment variables"
    echo "  admin       Show admin user information"
    echo "  help        Show this help message"
    echo ""
}

# Main script logic
case "${1:-check}" in
    "check")
        check_deployment
        ;;
    "api")
        test_api_health
        test_api_auth
        ;;
    "dashboard")
        test_dashboard
        ;;
    "env")
        show_env_vars
        ;;
    "admin")
        show_admin_info
        ;;
    "help"|*)
        show_help
        ;;
esac
